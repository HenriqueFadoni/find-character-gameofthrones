[{"/Users/henriquefadoni/Documents/Development/Web Development/pickups/src/App.js":"1","/Users/henriquefadoni/Documents/Development/Web Development/pickups/src/reportWebVitals.js":"2"},{"size":1288,"mtime":1610648918771,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1610642995907,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"s1piub",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/henriquefadoni/Documents/Development/Web Development/pickups/src/App.js",["11"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [characters, setCharacters] = useState([]);\n\n  const getData = async () => {\n    const { data } = await axios.get('https://www.anapioficeandfire.com/api/characters');\n    setCharacters([...data]);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const alphabeticOrder = () => {\n    const newCharacters = characters.sort((charA, charB) => {\n      if (charA.aliases < charB.aliases) return -1\n      if (charA.aliases > charB.aliases) return 1\n      return 0;\n    });\n\n    setCharacters([...newCharacters]);\n  }\n\n  const bookOrder = () => {\n    const newCharacters = characters.sort((charA, charB) => {\n      if (charA.books[0] < charB.books[0]) return -1\n      if (charA.books[0] > charB.books[0]) return 1\n      return 0;\n    });\n\n    setCharacters([...newCharacters]);\n  }\n\n  let renderList = characters.map((character, i) => (\n      <p key={i}>{character.aliases[0]}</p>\n    )\n  )\n\n  return (\n    <div className=\"App\">\n      <h1>Find Your Favorite Game of Thrones Characters</h1>\n      <button onClick={alphabeticOrder}>Alphabetic Order</button>\n      <button onClick={bookOrder}>Book Order</button>\n      {renderList}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/henriquefadoni/Documents/Development/Web Development/pickups/src/reportWebVitals.js",[],{"ruleId":null,"fatal":true,"severity":2,"message":"12","line":38,"column":26},"Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  36 | \n  37 |   let renderList = characters.map((character, i) => (\n> 38 |       <p key={i} onClick={}>{character.aliases[0]}</p>\n     |                          ^\n  39 |     )\n  40 |   )\n  41 |"]